---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { formatDistance } from 'date-fns';
import readingTime from 'reading-time';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
const content = await Astro.slots.render('default');
const readingStats = readingTime(content);
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="bg-white dark:bg-slate-900">
    <Header />
    <main class="mx-auto max-w-4xl px-4 py-12">
      <article class="prose prose-slate dark:prose-invert mx-auto">
        {heroImage && (
          <img
            src={heroImage}
            alt=""
            class="w-full h-[400px] object-cover rounded-xl shadow-lg"
          />
        )}
        <div class="mt-8">
          <div class="flex items-center space-x-4 text-sm text-slate-500 dark:text-slate-400">
            <FormattedDate date={pubDate} />
            <span>•</span>
            <span>{readingStats.text}</span>
            {updatedDate && (
              <>
                <span>•</span>
                <span>Updated {formatDistance(updatedDate, new Date(), { addSuffix: true })}</span>
              </>
            )}
          </div>
          <h1 class="mt-4 text-4xl font-bold text-slate-900 dark:text-white">{title}</h1>
          <p class="mt-4 text-xl text-slate-600 dark:text-slate-400">{description}</p>
        </div>
        <div class="mt-12">
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>